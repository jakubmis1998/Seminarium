import numpy as np
import time

"""
axes=(0,0) - 1 i 3 wiersz taki sam, ale ogolnie wyniki zle
wyniki ogolnie sie roznia
"""

if __name__ == "__main__":
    l = [1, 2, 3, 3, 2, 1, 0, 0, 1, 2, 3, 3, 0, 0, 1, 2]
    l2d = [[1, 2, 3, 3, 2, 1, 0, 0],
           [1, 2, 3, 3, 0, 0, 1, 2]]
    l4d = [[1, 2, 3, 3], 
           [2, 1, 0, 0],
           [1, 2, 3, 3],
           [0, 0, 1, 2]]

    arr = np.asarray(l, np.float32)
    arr2d = np.asarray(l2d, np.float32)
    arr4d = np.asarray(l4d, np.float32)

    arrf = np.fft.fft(arr)
    arrf2d = np.fft.fft2(arr2d)
    arrf4d = np.fft.fft2(arr4d)

    print("1D\n{}".format(arrf))
    print("2D\n{}".format(arrf2d))
    print("4D\n{}".format(arrf4d))

"""
1D
[24.        +0.j          2.17218241-1.45140589j        -0.70710678-9.94974747j      0.98213962+4.93754928j
-3.        +3.j         -2.39635318-0.47666428j         0.70710678+0.05025253j      -0.75796885+1.13438055j
-2.        +0.j          -0.75796885-1.13438055j         0.70710678-0.05025253j     -2.39635318+0.47666428j
-3.        -3.j          0.98213962-4.93754928j         -0.70710678+9.94974747j     2.17218241+1.45140589j]
2D
[[24.        +0.j         -0.70710678-9.94974747j -3.        +3.j      0.70710678+0.05025253j
 -2.        +0.j          0.70710678-0.05025253j -3.        -3.j         -0.70710678+9.94974747j]
 [ 0.        +0.j         -4.12132034-1.70710678j  3.        -3.j      0.12132034+0.29289322j
 2.        +0.j          0.12132034-0.29289322j 3.        +3.j         -4.12132034+1.70710678j]]
4D
[[24.+0.j -3.+3.j -2.+0.j -3.-3.j]
 [ 0.+0.j -3.-3.j  0.-2.j  3.-3.j]
 [12.+0.j -5.+1.j -2.+0.j -5.-1.j]
 [ 0.+0.j  3.+3.j  0.+2.j -3.+3.j]]

"""